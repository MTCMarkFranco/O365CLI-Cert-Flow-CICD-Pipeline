trigger:
  branches:
    include:
      - '*'

variables:
  OFFICE365CLI_AADAPPID: '<APP_ID>'
  OFFICE365CLI_TENANT: '<APP_TENANT>'
  node_version: '10.x'
  cert_thumbprint: '<THUMB_PRINT>'

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - script: echo Building!
    - task: DownloadSecureFile@1
      name: caCertificate
      displayName: 'Download CA certificate'
      inputs:
        secureFile: 'protected.pfx'
    - script: |
        echo Found cert at $(caCertificate.secureFilePath) 
    ##########################################
    ## specify which node version to use
    ##########################################
    - task: UseNode@1
      displayName: Set to Node.js $(node_version)
      inputs:
        version: $(node_version)
      condition: ne('$(node_version)', '')

    ##########################################
    ## install Office 365 CLI
    ##########################################
    - script: sudo npm install --global @pnp/office365-cli
      displayName: Install Office365 CLI

    ##########################################
    ## login to Office 365 CLI
    ##########################################
    - script: o365 login $(o365_app_catalog_site_url) --authType certificate --certificateFile $(caCertificate.secureFilePath) --thumbprint $(cert_thumbprint) --password "<CERT_PASSWORD>"
      displayName: Login to Office365

    ##########################################
    ## Enable Flow
    ##########################################
    - script: o365 flow enable --environment "MS Personal Productivity (msdefault)" --name "Power Apps button" --asAdmin
      displayName: Enable Flow